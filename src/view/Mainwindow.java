/* 
 * Copyright (C) 2016 Sallai Andr√°s <termih@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package view;

import controller.Controller;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;

/**
 *
 * @author andras
 */
public class Mainwindow extends javax.swing.JFrame {

    public Controller controller;
    public final JFileChooser fileChooser = new JFileChooser();
    ImageIcon imageIcon;

    /**
     * Creates new form Mainwindow
     */
    public Mainwindow() {
        controller = new Controller(this);
        initComponents();

        imageIcon = new ImageIcon("images/icon3.png");
        this.setIconImage(imageIcon.getImage());
        
        controller.model.initTable();
        controller.options.loadOptions();

        controller.model.wordsModel.addListDataListener(new ListDataListener() {
            @Override
            public void intervalAdded(ListDataEvent e) {
                controller.wordModelChangedListDataListener(e);
            }

            @Override
            public void intervalRemoved(ListDataEvent e) {
                controller.wordModelChangedListDataListener(e);
            }

            @Override
            public void contentsChanged(ListDataEvent e) {
                controller.wordModelChangedListDataListener(e);
            }
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lowerUperCaseButtonGroup = new javax.swing.ButtonGroup();
        fontButtonGroup = new javax.swing.ButtonGroup();
        directionButtonGroup = new javax.swing.ButtonGroup();
        wordsEditorCaseLoserUpperbuttonGroup = new javax.swing.ButtonGroup();
        containerPanel = new javax.swing.JPanel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        workdContainerPanel = new javax.swing.JPanel();
        workPanel = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        controllPanel = new javax.swing.JPanel();
        wordsPanel = new javax.swing.JPanel();
        wordListSizePanel = new javax.swing.JPanel();
        wordListSizeTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordsList = new javax.swing.JList<>();
        wordsHandlerPanel = new javax.swing.JPanel();
        editorTextField = new javax.swing.JTextField();
        wordsButtonsPanel = new javax.swing.JPanel();
        addWordButton = new javax.swing.JButton();
        deleteWordButton = new javax.swing.JButton();
        deleteAllButton = new javax.swing.JButton();
        toWordsPanelButton = new javax.swing.JButton();
        gridSizePanel = new javax.swing.JPanel();
        gridSizeInnerPanel = new javax.swing.JPanel();
        colSizePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        colCountSpinner = new javax.swing.JSpinner();
        rowSizePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        rowCountSpinner = new javax.swing.JSpinner();
        cellSizePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cellSizeSpinner = new javax.swing.JSpinner();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        girdButtonsPanel = new javax.swing.JPanel();
        gridSizeApplyButton = new javax.swing.JButton();
        fontPanel = new javax.swing.JPanel();
        fontRadioButotnsPanel = new javax.swing.JPanel();
        sansRadioButton = new javax.swing.JRadioButton();
        serifRadioButton = new javax.swing.JRadioButton();
        fontSizePanel = new javax.swing.JPanel();
        fontSizeSpinner = new javax.swing.JSpinner();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(30, 0), new java.awt.Dimension(30, 0), new java.awt.Dimension(10, 32767));
        fontsButtonPanel = new javax.swing.JPanel();
        fontApplyButton = new javax.swing.JButton();
        lowerUperCasePanel = new javax.swing.JPanel();
        lowerCaseRadioButton = new javax.swing.JRadioButton();
        upperCaseRadioButton = new javax.swing.JRadioButton();
        directionPanel = new javax.swing.JPanel();
        roundRadioButton = new javax.swing.JRadioButton();
        downRightRadioButton = new javax.swing.JRadioButton();
        buttonsPanel = new javax.swing.JPanel();
        makeButton = new javax.swing.JButton();
        fillRandomPlaceButton = new javax.swing.JButton();
        gridPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        progressPanel = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        wordsEditorPanel = new javax.swing.JPanel();
        wordEditorLeftPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        editorTextArea = new javax.swing.JTextArea();
        editorButtons01Panel = new javax.swing.JPanel();
        toWorkerPanelButton = new javax.swing.JButton();
        toClipboardButton = new javax.swing.JButton();
        editorDeleteButton = new javax.swing.JButton();
        editorBalanceToWordsButton = new javax.swing.JButton();
        toOrganizerButton = new javax.swing.JButton();
        editorSettingsInfoPanel = new javax.swing.JPanel();
        editorLowerUppercasePanel = new javax.swing.JPanel();
        editorLowerCaseRadioButton = new javax.swing.JRadioButton();
        editorUpperCaseRadioButton = new javax.swing.JRadioButton();
        balancePanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        balanceTextArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        organizerPanel = new javax.swing.JPanel();
        organizerButtonsPanel5 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        orgSortByAlphabetButton = new javax.swing.JButton();
        orgSortByLengthPerLineButton = new javax.swing.JButton();
        orgSortByLengthOneLineButton = new javax.swing.JButton();
        orgToClipboardButton = new javax.swing.JButton();
        organizerPlacePanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        organizerTextArea = new javax.swing.JTextArea();
        statusPanel = new javax.swing.JPanel();
        statusTextField = new javax.swing.JTextField();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        exportGridToPngMenuItem = new javax.swing.JMenuItem();
        exportOriginGridToPngMenuItem = new javax.swing.JMenuItem();
        printMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        simplePatternMenuItem = new javax.swing.JMenuItem();
        loadWordsPatternMenuItem = new javax.swing.JMenuItem();
        optionsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpContentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(950, 700));
        setMinimumSize(new java.awt.Dimension(950, 700));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        containerPanel.setLayout(new javax.swing.BoxLayout(containerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        workdContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(controller.filehandler.filePath));
        workdContainerPanel.setMaximumSize(new java.awt.Dimension(957, 453));
        workdContainerPanel.setLayout(new javax.swing.BoxLayout(workdContainerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        workPanel.setLayout(new java.awt.GridLayout(1, 0));

        controllPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Words controll"));
        controllPanel.setMaximumSize(new java.awt.Dimension(441, 439));
        controllPanel.setLayout(new javax.swing.BoxLayout(controllPanel, javax.swing.BoxLayout.PAGE_AXIS));

        wordsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Words"));
        wordsPanel.setLayout(new javax.swing.BoxLayout(wordsPanel, javax.swing.BoxLayout.PAGE_AXIS));

        wordListSizePanel.setPreferredSize(new java.awt.Dimension(287, 24));

        wordListSizeTextField.setMaximumSize(new java.awt.Dimension(2147483647, 24));
        wordListSizeTextField.setPreferredSize(new java.awt.Dimension(40, 19));
        wordListSizePanel.add(wordListSizeTextField);

        wordsPanel.add(wordListSizePanel);

        wordsList.setModel(controller.model.wordsModel);
        wordsList.setMaximumSize(new java.awt.Dimension(0, 100));
        wordsList.setMinimumSize(new java.awt.Dimension(0, 100));
        wordsList.setPreferredSize(new java.awt.Dimension(0, 100));
        jScrollPane1.setViewportView(wordsList);

        wordsPanel.add(jScrollPane1);

        wordsHandlerPanel.setLayout(new javax.swing.BoxLayout(wordsHandlerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        editorTextField.setMaximumSize(new java.awt.Dimension(2147483647, 24));
        wordsHandlerPanel.add(editorTextField);

        wordsButtonsPanel.setLayout(new javax.swing.BoxLayout(wordsButtonsPanel, javax.swing.BoxLayout.LINE_AXIS));

        addWordButton.setText("Add word");
        addWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWordButtonActionPerformed(evt);
            }
        });
        wordsButtonsPanel.add(addWordButton);

        deleteWordButton.setText("Delete word");
        deleteWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWordButtonActionPerformed(evt);
            }
        });
        wordsButtonsPanel.add(deleteWordButton);

        deleteAllButton.setText("Delete All");
        deleteAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllButtonActionPerformed(evt);
            }
        });
        wordsButtonsPanel.add(deleteAllButton);

        toWordsPanelButton.setText("To Editor");
        toWordsPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toWordsPanelButtonActionPerformed(evt);
            }
        });
        wordsButtonsPanel.add(toWordsPanelButton);

        wordsHandlerPanel.add(wordsButtonsPanel);

        wordsPanel.add(wordsHandlerPanel);

        controllPanel.add(wordsPanel);

        gridSizePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Grid size"));
        gridSizePanel.setLayout(new javax.swing.BoxLayout(gridSizePanel, javax.swing.BoxLayout.LINE_AXIS));

        gridSizeInnerPanel.setLayout(new javax.swing.BoxLayout(gridSizeInnerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        colSizePanel.setLayout(new javax.swing.BoxLayout(colSizePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setPreferredSize(new java.awt.Dimension(70, 15));
        colSizePanel.add(jLabel1);

        colCountSpinner.setMinimumSize(new java.awt.Dimension(28, 40));
        colCountSpinner.setValue(12);
        colSizePanel.add(colCountSpinner);

        gridSizeInnerPanel.add(colSizePanel);

        rowSizePanel.setLayout(new javax.swing.BoxLayout(rowSizePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setMinimumSize(new java.awt.Dimension(50, 15));
        jLabel2.setPreferredSize(new java.awt.Dimension(70, 15));
        rowSizePanel.add(jLabel2);

        rowCountSpinner.setMinimumSize(new java.awt.Dimension(28, 40));
        rowCountSpinner.setValue(12);
        rowSizePanel.add(rowCountSpinner);

        gridSizeInnerPanel.add(rowSizePanel);

        cellSizePanel.setLayout(new javax.swing.BoxLayout(cellSizePanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setPreferredSize(new java.awt.Dimension(70, 15));
        cellSizePanel.add(jLabel3);

        cellSizeSpinner.setMinimumSize(new java.awt.Dimension(28, 40));
        cellSizeSpinner.setValue(20);
        cellSizePanel.add(cellSizeSpinner);

        gridSizeInnerPanel.add(cellSizePanel);

        gridSizePanel.add(gridSizeInnerPanel);
        gridSizePanel.add(filler1);

        girdButtonsPanel.setMaximumSize(new java.awt.Dimension(32767, 30));
        girdButtonsPanel.setLayout(new java.awt.GridLayout(1, 0));

        gridSizeApplyButton.setText("Apply grid size");
        gridSizeApplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridSizeApplyButtonActionPerformed(evt);
            }
        });
        girdButtonsPanel.add(gridSizeApplyButton);

        gridSizePanel.add(girdButtonsPanel);

        controllPanel.add(gridSizePanel);

        fontPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Font"));
        fontPanel.setLayout(new java.awt.GridLayout(1, 3));

        fontRadioButotnsPanel.setLayout(new java.awt.GridLayout(2, 0));

        fontButtonGroup.add(sansRadioButton);
        sansRadioButton.setSelected(true);
        sansRadioButton.setText("Sans");
        fontRadioButotnsPanel.add(sansRadioButton);

        fontButtonGroup.add(serifRadioButton);
        serifRadioButton.setText("Serif");
        fontRadioButotnsPanel.add(serifRadioButton);

        fontPanel.add(fontRadioButotnsPanel);

        fontSizePanel.setLayout(new javax.swing.BoxLayout(fontSizePanel, javax.swing.BoxLayout.LINE_AXIS));

        fontSizeSpinner.setMaximumSize(new java.awt.Dimension(32767, 24));
        fontSizeSpinner.setValue(12);
        fontSizePanel.add(fontSizeSpinner);
        fontSizePanel.add(filler4);

        fontPanel.add(fontSizePanel);

        fontsButtonPanel.setLayout(new javax.swing.BoxLayout(fontsButtonPanel, javax.swing.BoxLayout.LINE_AXIS));

        fontApplyButton.setText("Apply font");
        fontApplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontApplyButtonActionPerformed(evt);
            }
        });
        fontsButtonPanel.add(fontApplyButton);

        fontPanel.add(fontsButtonPanel);

        controllPanel.add(fontPanel);

        lowerUperCasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Upper and lower case"));
        lowerUperCasePanel.setLayout(new java.awt.GridLayout(1, 0));

        lowerUperCaseButtonGroup.add(lowerCaseRadioButton);
        lowerCaseRadioButton.setSelected(true);
        lowerCaseRadioButton.setText("Lower Case");
        lowerCaseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowerCaseRadioButtonActionPerformed(evt);
            }
        });
        lowerUperCasePanel.add(lowerCaseRadioButton);

        lowerUperCaseButtonGroup.add(upperCaseRadioButton);
        upperCaseRadioButton.setText("Upper Case");
        upperCaseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upperCaseRadioButtonActionPerformed(evt);
            }
        });
        lowerUperCasePanel.add(upperCaseRadioButton);

        controllPanel.add(lowerUperCasePanel);

        directionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Direction"));
        directionPanel.setLayout(new java.awt.GridLayout(1, 0));

        directionButtonGroup.add(roundRadioButton);
        roundRadioButton.setText("Round");
        roundRadioButton.setToolTipText("<html>\nThe possible directions for filling in any direction.");
        directionPanel.add(roundRadioButton);

        directionButtonGroup.add(downRightRadioButton);
        downRightRadioButton.setSelected(true);
        downRightRadioButton.setText("Down, right");
        downRightRadioButton.setToolTipText("<html>\nPossible filling direction: left, <br>\nright, diagonally down and down.");
        directionPanel.add(downRightRadioButton);

        controllPanel.add(directionPanel);

        makeButton.setText("Make");
        makeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeButtonActionPerformed(evt);
            }
        });

        fillRandomPlaceButton.setText("Fill emply places");
        fillRandomPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillRandomPlaceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(makeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fillRandomPlaceButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeButton)
                    .addComponent(fillRandomPlaceButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controllPanel.add(buttonsPanel);

        jSplitPane1.setRightComponent(controllPanel);

        gridPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridPanel.setMaximumSize(new java.awt.Dimension(300, 32767));
        gridPanel.setPreferredSize(new java.awt.Dimension(500, 422));
        gridPanel.setLayout(new javax.swing.BoxLayout(gridPanel, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane3.setMinimumSize(new java.awt.Dimension(500, 22));

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setModel(controller.model.tableModel);
        table.setMinimumSize(new java.awt.Dimension(300, 192));
        table.setRowSelectionAllowed(false);
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(table);

        gridPanel.add(jScrollPane3);

        jSplitPane1.setLeftComponent(gridPanel);

        workPanel.add(jSplitPane1);

        workdContainerPanel.add(workPanel);

        progressPanel.setLayout(new javax.swing.BoxLayout(progressPanel, javax.swing.BoxLayout.PAGE_AXIS));
        progressPanel.add(progressBar);

        workdContainerPanel.add(progressPanel);

        mainTabbedPane.addTab("Worker", workdContainerPanel);

        wordsEditorPanel.setLayout(new javax.swing.BoxLayout(wordsEditorPanel, javax.swing.BoxLayout.LINE_AXIS));

        wordEditorLeftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Wordeditor"));
        wordEditorLeftPanel.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.PAGE_AXIS));

        editorTextArea.setColumns(20);
        editorTextArea.setFont(new java.awt.Font("FreeMono", 0, 14)); // NOI18N
        editorTextArea.setLineWrap(true);
        editorTextArea.setRows(5);
        editorTextArea.setMinimumSize(new java.awt.Dimension(400, 15));
        jScrollPane2.setViewportView(editorTextArea);

        jPanel2.add(jScrollPane2);

        editorButtons01Panel.setLayout(new javax.swing.BoxLayout(editorButtons01Panel, javax.swing.BoxLayout.LINE_AXIS));

        toWorkerPanelButton.setText("To Worker");
        toWorkerPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toWorkerPanelButtonActionPerformed(evt);
            }
        });
        editorButtons01Panel.add(toWorkerPanelButton);

        toClipboardButton.setText("To Clipboard");
        toClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toClipboardButtonActionPerformed(evt);
            }
        });
        editorButtons01Panel.add(toClipboardButton);

        editorDeleteButton.setText("Delete");
        editorDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorDeleteButtonActionPerformed(evt);
            }
        });
        editorButtons01Panel.add(editorDeleteButton);

        editorBalanceToWordsButton.setText("Balance to words");
        editorBalanceToWordsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorBalanceToWordsButtonActionPerformed(evt);
            }
        });
        editorButtons01Panel.add(editorBalanceToWordsButton);

        toOrganizerButton.setText("To Organizer");
        toOrganizerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toOrganizerButtonActionPerformed(evt);
            }
        });
        editorButtons01Panel.add(toOrganizerButton);

        jPanel2.add(editorButtons01Panel);

        wordEditorLeftPanel.add(jPanel2);

        wordsEditorPanel.add(wordEditorLeftPanel);

        editorSettingsInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Switches"));
        editorSettingsInfoPanel.setLayout(new javax.swing.BoxLayout(editorSettingsInfoPanel, javax.swing.BoxLayout.PAGE_AXIS));

        editorLowerUppercasePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Upper and lower case"));
        editorLowerUppercasePanel.setLayout(new java.awt.GridLayout(3, 0));

        wordsEditorCaseLoserUpperbuttonGroup.add(editorLowerCaseRadioButton);
        editorLowerCaseRadioButton.setText("Lower Case");
        editorLowerCaseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorLowerCaseRadioButtonActionPerformed(evt);
            }
        });
        editorLowerUppercasePanel.add(editorLowerCaseRadioButton);

        wordsEditorCaseLoserUpperbuttonGroup.add(editorUpperCaseRadioButton);
        editorUpperCaseRadioButton.setText("Upper Case");
        editorUpperCaseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorUpperCaseRadioButtonActionPerformed(evt);
            }
        });
        editorLowerUppercasePanel.add(editorUpperCaseRadioButton);

        editorSettingsInfoPanel.add(editorLowerUppercasePanel);

        balancePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Balance words"));
        balancePanel.setMinimumSize(new java.awt.Dimension(22, 400));
        balancePanel.setPreferredSize(new java.awt.Dimension(318, 400));
        balancePanel.setLayout(new javax.swing.BoxLayout(balancePanel, javax.swing.BoxLayout.PAGE_AXIS));

        balanceTextArea.setColumns(20);
        balanceTextArea.setRows(5);
        balanceTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        balanceTextArea.setMinimumSize(new java.awt.Dimension(0, 300));
        balanceTextArea.setPreferredSize(new java.awt.Dimension(230, 300));
        jScrollPane4.setViewportView(balanceTextArea);

        balancePanel.add(jScrollPane4);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 40));
        jPanel1.setPreferredSize(new java.awt.Dimension(320, 40));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        balancePanel.add(jPanel1);

        editorSettingsInfoPanel.add(balancePanel);

        wordsEditorPanel.add(editorSettingsInfoPanel);

        mainTabbedPane.addTab("Editor", wordsEditorPanel);

        organizerPanel.setLayout(new javax.swing.BoxLayout(organizerPanel, javax.swing.BoxLayout.PAGE_AXIS));

        organizerButtonsPanel5.setLayout(new javax.swing.BoxLayout(organizerButtonsPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jToolBar1.setRollover(true);

        orgSortByAlphabetButton.setText("Sort By Alphabet");
        orgSortByAlphabetButton.setToolTipText("<html>\nSort the words by alphabet.<br>\nThe word moving from editor.");
        orgSortByAlphabetButton.setFocusable(false);
        orgSortByAlphabetButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        orgSortByAlphabetButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        orgSortByAlphabetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgSortByAlphabetButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(orgSortByAlphabetButton);

        orgSortByLengthPerLineButton.setText("Sort By Length Per Line");
        orgSortByLengthPerLineButton.setToolTipText("<html>\nSort the words by legnth per line.<br>\nThe word moving from editor.\n</html>");
        orgSortByLengthPerLineButton.setFocusable(false);
        orgSortByLengthPerLineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        orgSortByLengthPerLineButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        orgSortByLengthPerLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgSortByLengthPerLineButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(orgSortByLengthPerLineButton);

        orgSortByLengthOneLineButton.setText("Sort By Length One Line");
        orgSortByLengthOneLineButton.setToolTipText("<html>\nSort the words by length one line.<br>\nThe word moving from editor.");
        orgSortByLengthOneLineButton.setFocusable(false);
        orgSortByLengthOneLineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        orgSortByLengthOneLineButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        orgSortByLengthOneLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgSortByLengthOneLineButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(orgSortByLengthOneLineButton);

        orgToClipboardButton.setText("To Clipboard");
        orgToClipboardButton.setFocusable(false);
        orgToClipboardButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        orgToClipboardButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        orgToClipboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgToClipboardButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(orgToClipboardButton);

        organizerButtonsPanel5.add(jToolBar1);

        organizerPanel.add(organizerButtonsPanel5);

        organizerPlacePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Organizer place"));
        organizerPlacePanel.setLayout(new java.awt.GridLayout(1, 0));

        organizerTextArea.setEditable(false);
        organizerTextArea.setColumns(20);
        organizerTextArea.setFont(new java.awt.Font("FreeMono", 0, 18)); // NOI18N
        organizerTextArea.setLineWrap(true);
        organizerTextArea.setRows(5);
        jScrollPane5.setViewportView(organizerTextArea);

        organizerPlacePanel.add(jScrollPane5);

        organizerPanel.add(organizerPlacePanel);

        mainTabbedPane.addTab("Organizer", organizerPanel);

        containerPanel.add(mainTabbedPane);

        statusPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        statusPanel.setLayout(new javax.swing.BoxLayout(statusPanel, javax.swing.BoxLayout.LINE_AXIS));

        statusTextField.setMaximumSize(new java.awt.Dimension(2147483647, 24));
        statusPanel.add(statusTextField);

        containerPanel.add(statusPanel);

        getContentPane().add(containerPanel);

        fileMenu.setText("File");

        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        openMenuItem.setText("Open...");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);

        exportGridToPngMenuItem.setText("Export grid to PNG format...");
        exportGridToPngMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportGridToPngMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exportGridToPngMenuItem);

        exportOriginGridToPngMenuItem.setText("Export original grid to PNG format...");
        exportOriginGridToPngMenuItem.setEnabled(false);
        exportOriginGridToPngMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportOriginGridToPngMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exportOriginGridToPngMenuItem);

        printMenuItem.setText("Print...");
        printMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(printMenuItem);
        fileMenu.add(jSeparator1);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenuBar.add(fileMenu);

        toolsMenu.setText("Tools");

        simplePatternMenuItem.setText("Simple pattern");
        simplePatternMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simplePatternMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(simplePatternMenuItem);

        loadWordsPatternMenuItem.setText("Complet pattern");
        loadWordsPatternMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadWordsPatternMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(loadWordsPatternMenuItem);

        optionsMenuItem.setText("Options");
        optionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(optionsMenuItem);

        mainMenuBar.add(toolsMenu);

        helpMenu.setText("Help");

        helpContentsMenuItem.setText("Help contents");
        helpContentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpContentsMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(helpContentsMenuItem);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridSizeApplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridSizeApplyButtonActionPerformed
        controller.gridSizeApplyButtonActionPerformed(evt);
    }//GEN-LAST:event_gridSizeApplyButtonActionPerformed

    private void makeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeButtonActionPerformed
        controller.makeButtonActionPerformed(evt);
    }//GEN-LAST:event_makeButtonActionPerformed

    private void addWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWordButtonActionPerformed
        controller.addWordButtonActionPerformed(evt);
    }//GEN-LAST:event_addWordButtonActionPerformed

    private void deleteWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWordButtonActionPerformed
        controller.deleteWordButtonActionPerformed(evt);
    }//GEN-LAST:event_deleteWordButtonActionPerformed

    private void fontApplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontApplyButtonActionPerformed
        controller.fontApplyButtonActionPerformed(evt);
    }//GEN-LAST:event_fontApplyButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.formWindowClosing(evt);
    }//GEN-LAST:event_formWindowClosing

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        controller.newMenuItemActionPerformed(evt);
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        controller.openMenuItemActionPerformed(evt);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        controller.saveMenuItemActionPerformed(evt);
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        controller.saveAsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void exportGridToPngMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportGridToPngMenuItemActionPerformed
        controller.exportGridToPngMenuItemActionPerformed(evt);
    }//GEN-LAST:event_exportGridToPngMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        controller.exitMenuItemActionPerformed(evt);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void helpContentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpContentsMenuItemActionPerformed
        controller.helpContentsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_helpContentsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        controller.aboutMenuItemActionPerformed(evt);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void loadWordsPatternMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadWordsPatternMenuItemActionPerformed
        controller.loadWordsPatternMenuItemActionPerformed(evt);
    }//GEN-LAST:event_loadWordsPatternMenuItemActionPerformed

    private void fillRandomPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillRandomPlaceButtonActionPerformed
        controller.fillRandomPlaceButtonActionPerformed(evt);
    }//GEN-LAST:event_fillRandomPlaceButtonActionPerformed

    private void exportOriginGridToPngMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportOriginGridToPngMenuItemActionPerformed
        controller.exportOriginGridToPngMenuItemActionPerformed(evt);
    }//GEN-LAST:event_exportOriginGridToPngMenuItemActionPerformed

    private void toWordsPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toWordsPanelButtonActionPerformed
        controller.toWordsPanelButtonActionPerformed(evt);
    }//GEN-LAST:event_toWordsPanelButtonActionPerformed

    private void toClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toClipboardButtonActionPerformed
        controller.toClipboardButtonActionPerformed(evt);
    }//GEN-LAST:event_toClipboardButtonActionPerformed

    private void toWorkerPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toWorkerPanelButtonActionPerformed
        controller.toWorkerPanelButtonActionPerformed(evt);
    }//GEN-LAST:event_toWorkerPanelButtonActionPerformed

    private void editorLowerCaseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorLowerCaseRadioButtonActionPerformed
        controller.editorLowerCaseRadioButtonActionPerformed(evt);
    }//GEN-LAST:event_editorLowerCaseRadioButtonActionPerformed

    private void editorUpperCaseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorUpperCaseRadioButtonActionPerformed
        controller.editorUpperCaseRadioButtonActionPerformed(evt);
    }//GEN-LAST:event_editorUpperCaseRadioButtonActionPerformed

    private void simplePatternMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simplePatternMenuItemActionPerformed
        controller.simplePatternMenuItemActionPerformed(evt);
    }//GEN-LAST:event_simplePatternMenuItemActionPerformed

    private void editorDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorDeleteButtonActionPerformed
        controller.editorDeleteButtonActionPerformed(evt);
    }//GEN-LAST:event_editorDeleteButtonActionPerformed

    private void lowerCaseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowerCaseRadioButtonActionPerformed
        controller.lowerCaseRadioButtonActionPerformed(evt);
    }//GEN-LAST:event_lowerCaseRadioButtonActionPerformed

    private void upperCaseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upperCaseRadioButtonActionPerformed
        controller.uperCaseRadioButtonActionPerformed(evt);
    }//GEN-LAST:event_upperCaseRadioButtonActionPerformed

    private void orgSortByAlphabetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgSortByAlphabetButtonActionPerformed
        controller.orgSortAlphabetButtonActionPerformed(evt);
    }//GEN-LAST:event_orgSortByAlphabetButtonActionPerformed

    private void orgSortByLengthPerLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgSortByLengthPerLineButtonActionPerformed
        controller.orgSortByLengthPerLineButtonActionPerformed(evt);
    }//GEN-LAST:event_orgSortByLengthPerLineButtonActionPerformed

    private void orgSortByLengthOneLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgSortByLengthOneLineButtonActionPerformed
        controller.orgSortByLengthOneLineButtonActionPerformed(evt);
    }//GEN-LAST:event_orgSortByLengthOneLineButtonActionPerformed

    private void toOrganizerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toOrganizerButtonActionPerformed
        controller.toOrganizerButtonActionPerformed(evt);
    }//GEN-LAST:event_toOrganizerButtonActionPerformed

    private void editorBalanceToWordsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorBalanceToWordsButtonActionPerformed
        controller.editorBalanceToWordsButtonActionPerformed(evt);
    }//GEN-LAST:event_editorBalanceToWordsButtonActionPerformed

    private void orgToClipboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgToClipboardButtonActionPerformed
        controller.orgToClipboardButtonActionPerformed(evt);
    }//GEN-LAST:event_orgToClipboardButtonActionPerformed

    private void deleteAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllButtonActionPerformed
        controller.deleteAllButtonActionPerformed(evt);
    }//GEN-LAST:event_deleteAllButtonActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        controller.closeMenuItemActionPerformed(evt);
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void printMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printMenuItemActionPerformed
        controller.printMenuItemActionPerformed(evt);
    }//GEN-LAST:event_printMenuItemActionPerformed

    private void optionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsMenuItemActionPerformed
        controller.optionsMenuItemActionPerformed(evt);
    }//GEN-LAST:event_optionsMenuItemActionPerformed

    public String getVersion() {
        return controller.model.applicationVersion;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Gtk+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainwindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addWordButton;
    private javax.swing.JPanel balancePanel;
    public javax.swing.JTextArea balanceTextArea;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JPanel cellSizePanel;
    public javax.swing.JSpinner cellSizeSpinner;
    private javax.swing.JMenuItem closeMenuItem;
    public javax.swing.JSpinner colCountSpinner;
    private javax.swing.JPanel colSizePanel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JPanel controllPanel;
    private javax.swing.JButton deleteAllButton;
    private javax.swing.JButton deleteWordButton;
    private javax.swing.ButtonGroup directionButtonGroup;
    private javax.swing.JPanel directionPanel;
    public javax.swing.JRadioButton downRightRadioButton;
    private javax.swing.JButton editorBalanceToWordsButton;
    private javax.swing.JPanel editorButtons01Panel;
    private javax.swing.JButton editorDeleteButton;
    private javax.swing.JRadioButton editorLowerCaseRadioButton;
    private javax.swing.JPanel editorLowerUppercasePanel;
    private javax.swing.JPanel editorSettingsInfoPanel;
    public javax.swing.JTextArea editorTextArea;
    public javax.swing.JTextField editorTextField;
    private javax.swing.JRadioButton editorUpperCaseRadioButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem exportGridToPngMenuItem;
    public javax.swing.JMenuItem exportOriginGridToPngMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton fillRandomPlaceButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JButton fontApplyButton;
    private javax.swing.ButtonGroup fontButtonGroup;
    private javax.swing.JPanel fontPanel;
    private javax.swing.JPanel fontRadioButotnsPanel;
    private javax.swing.JPanel fontSizePanel;
    public javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JPanel fontsButtonPanel;
    private javax.swing.JPanel girdButtonsPanel;
    private javax.swing.JPanel gridPanel;
    private javax.swing.JButton gridSizeApplyButton;
    private javax.swing.JPanel gridSizeInnerPanel;
    private javax.swing.JPanel gridSizePanel;
    private javax.swing.JMenuItem helpContentsMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem loadWordsPatternMenuItem;
    public javax.swing.JRadioButton lowerCaseRadioButton;
    private javax.swing.ButtonGroup lowerUperCaseButtonGroup;
    private javax.swing.JPanel lowerUperCasePanel;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JButton makeButton;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem optionsMenuItem;
    private javax.swing.JButton orgSortByAlphabetButton;
    private javax.swing.JButton orgSortByLengthOneLineButton;
    private javax.swing.JButton orgSortByLengthPerLineButton;
    private javax.swing.JButton orgToClipboardButton;
    private javax.swing.JPanel organizerButtonsPanel5;
    private javax.swing.JPanel organizerPanel;
    private javax.swing.JPanel organizerPlacePanel;
    public javax.swing.JTextArea organizerTextArea;
    private javax.swing.JMenuItem printMenuItem;
    public javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel progressPanel;
    public javax.swing.JRadioButton roundRadioButton;
    public javax.swing.JSpinner rowCountSpinner;
    private javax.swing.JPanel rowSizePanel;
    public javax.swing.JRadioButton sansRadioButton;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JRadioButton serifRadioButton;
    private javax.swing.JMenuItem simplePatternMenuItem;
    private javax.swing.JPanel statusPanel;
    public javax.swing.JTextField statusTextField;
    public javax.swing.JTable table;
    private javax.swing.JButton toClipboardButton;
    private javax.swing.JButton toOrganizerButton;
    private javax.swing.JButton toWordsPanelButton;
    private javax.swing.JButton toWorkerPanelButton;
    private javax.swing.JMenu toolsMenu;
    public javax.swing.JRadioButton upperCaseRadioButton;
    private javax.swing.JPanel wordEditorLeftPanel;
    private javax.swing.JPanel wordListSizePanel;
    public javax.swing.JTextField wordListSizeTextField;
    private javax.swing.JPanel wordsButtonsPanel;
    private javax.swing.ButtonGroup wordsEditorCaseLoserUpperbuttonGroup;
    private javax.swing.JPanel wordsEditorPanel;
    private javax.swing.JPanel wordsHandlerPanel;
    public javax.swing.JList<String> wordsList;
    private javax.swing.JPanel wordsPanel;
    private javax.swing.JPanel workPanel;
    public javax.swing.JPanel workdContainerPanel;
    // End of variables declaration//GEN-END:variables
}
